{"version":3,"file":"static/js/454.fc3a41f1.chunk.js","mappings":"uNACA,EAA8B,6BAA9B,EAA0E,8B,kBCA1E,EAA4B,8BAA5B,EAAiE,yBAAjE,EAAmG,2BAAnG,EAAwI,4B,SCoBxI,EAlBmB,SAAC,GAAmC,IAAlCA,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,KAEzC,OACC,iBAAKC,UAAWC,EAAhB,WACI,gBAAID,UAAWC,EAAf,WAA2B,0BAAOL,IAAlC,KAA+C,wCAAgBC,KAA/D,QACA,cAAGG,UAAWC,EAAd,SAA4BH,KAC5B,eAAGE,UAAWC,EAAd,UAAyBF,EAAKG,IAA9B,IAAoCH,EAAKI,MAAzC,IAAiDJ,EAAKK,UAG7D,E,gBCyDD,EA5DgB,WAEhB,OAAwBC,EAAAA,EAAAA,YAAxB,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,WAArC,eAAOG,EAAP,KAAeC,EAAf,KACOC,GAAWC,EAAAA,EAAAA,MAAXD,QAmBP,IAjBAE,EAAAA,EAAAA,YAAU,WAAI,wCACd,8FACOC,EAAAA,EAAAA,IAAA,6CAAgDC,OAAOJ,GAAvD,4BAAmFK,EAAAA,EAAnF,oBAA6GC,MAAK,SAACC,GACxF,IAA/BA,EAASX,KAAKY,QAAQC,QAKzBZ,GAAQ,OAAIU,EAASX,KAAKY,UAC1BT,EAAU,aALNA,EAAU,QAMb,IAAEW,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACf,IAXD,4CADc,uBAAC,WAAD,wBAcdG,EACC,GAAE,IAES,YAAThB,EACC,OAAQ,SAAC,KAAD,CACRiB,OAAO,KACPC,MAAM,KACNC,UAAU,uBACVC,aAAc,CAAC,EACfC,aAAa,uBACbC,YAAc,UACdC,SAAW,YAIf,GAAY,UAATvB,EACC,OAAO,cAAGR,UAAWC,EAAd,+CAIX,GAAY,aAATO,EAAoB,CACnB,IAAMwB,EAAS1B,EAAK2B,QAAO,SAACC,EAAQC,GAAT,OAAiBA,EAAM,EAAvB,IAA2BC,KAAI,SAAAF,GACtD,IAAOG,EAA2CH,EAA3CG,GAAIC,EAAuCJ,EAAvCI,eAAgBxC,EAAuBoC,EAAvBpC,QAASyC,EAAcL,EAAdK,WAC7BC,EAAoBF,EAApBE,SAAU3C,EAAUyC,EAAVzC,OACXE,EAAO,CACTK,KAAK,IAAIqC,KAAKF,GAAYG,cAC1BvC,MAAO,IAAIsC,KAAKF,GAAYI,WAAW,EACvCzC,IAAI,IAAIuC,KAAKF,GAAYK,WAE7B,OAAO,SAAC,EAAD,CAAqBhD,KAAM4C,EAAU3C,OAAQA,EAAQC,QAASA,EAASC,KAAMA,GAA5DsC,EAC3B,IAGD,OAAO,eAAIrC,UAAWC,EAAf,SACD+B,GAET,CAEA,C,oDCnEM,IAAMjB,EAAO,kC","sources":["webpack://movie-search/./src/components/Reviews/Reviews.module.css?7248","webpack://movie-search/./src/components/Reviews/ReviewItem/ReviewItem.module.css?5c52","components/Reviews/ReviewItem/ReviewItem.js","components/Reviews/Reviews.js","components/constants.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"listReviews\":\"Reviews_listReviews__E4b6B\",\"errorMessage\":\"Reviews_errorMessage__tmsUf\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ReviewItem_container__ADBE4\",\"date\":\"ReviewItem_date__-NoBo\",\"header\":\"ReviewItem_header__Unnuz\",\"content\":\"ReviewItem_content__LpgN7\"};","import css from './ReviewItem.module.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ReviewItem = ({name, rating, content, date}) => {\r\n  \r\n   return (\r\n    <div className={css.container}>\r\n        <h5 className={css.header}><span>{name}</span> <span> Rating: {rating}</span> </h5>\r\n        <p className={css.content}>{content}</p>\r\n        <p className={css.date}>{date.day}-{date.month}-{date.year}</p>\r\n    </div>\r\n   )\r\n}\r\n\r\nReviewItem.propTypes = {\r\n   name:PropTypes.string,\r\n   rating:PropTypes.number, \r\n   content:PropTypes.string,\r\n   date:PropTypes.object\r\n}\r\n\r\nexport default ReviewItem","import { useState } from 'react'\r\nimport css from './Reviews.module.css'\r\nimport { useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport ReviewItem from './ReviewItem/ReviewItem'\r\nimport { API_KEY } from 'components/constants'\r\nimport { ProgressBar } from 'react-loader-spinner'\r\n\r\nconst Reviews = () => {\r\n\r\nconst [data, setData] = useState()\r\nconst [status, setStatus] = useState('loading')\r\nconst {movieId} = useParams()\r\n\r\nuseEffect(()=>{\r\nasync function fetchData(){\r\nawait  axios.get(`https://api.themoviedb.org/3/movie/${Number(movieId)}/reviews?api_key=${API_KEY}&language=en-US`).then((responce)=>{\r\nif(responce.data.results.length===0){\r\n    setStatus(\"error\")\r\n    return\r\n}\r\n\r\nsetData([...responce.data.results])\r\nsetStatus('resolved')\r\n}).catch(error=>{\r\n    console.log(error)\r\n})\r\n}\r\nfetchData()\r\n}, [])\r\n\r\nif(status===\"loading\"){\r\n    return  <ProgressBar\r\n    height=\"80\"\r\n    width=\"80\"\r\n    ariaLabel=\"progress-bar-loading\"\r\n    wrapperStyle={{}}\r\n    wrapperClass=\"progress-bar-wrapper\"\r\n    borderColor = '#000000'\r\n    barColor = '#000000'\r\n  />\r\n}\r\n\r\nif(status===\"error\"){\r\n    return <p className={css.errorMessage}>There is no reviews for this film</p>\r\n}\r\n\r\n\r\nif(status==='resolved'){\r\n    const result = data.filter((review, index)=>index<10).map(review=>{\r\n        const {id, author_details, content, updated_at} = review\r\n        const {username, rating} = author_details\r\n        const date = {\r\n            year:new Date(updated_at).getFullYear(),\r\n            month: new Date(updated_at).getMonth()+1,\r\n            day:new Date(updated_at).getDate()\r\n        }\r\n        return <ReviewItem key={id} name={username} rating={rating} content={content} date={date}></ReviewItem>\r\n    })\r\n\r\n\r\n    return <ul className={css.listReviews}>\r\n         {result}\r\n    </ul>\r\n}\r\n\r\n}\r\n\r\nexport default Reviews","export const API_KEY =  `2b6f5b76cc1ed189784d28b4ff513eb4`"],"names":["name","rating","content","date","className","css","day","month","year","useState","data","setData","status","setStatus","movieId","useParams","useEffect","axios","Number","API_KEY","then","responce","results","length","catch","error","console","log","fetchData","height","width","ariaLabel","wrapperStyle","wrapperClass","borderColor","barColor","result","filter","review","index","map","id","author_details","updated_at","username","Date","getFullYear","getMonth","getDate"],"sourceRoot":""}